{
  "directory": "kukai",
  "timestamp": "2025-01-31T16:16:57Z",
  "files": {
    "readme.md": {
      "size": 7456,
      "lastModified": "2025-01-29T17:01:29Z",
      "content": ""
    },
    "kukai_config.toml": {
      "size": 375,
      "lastModified": "2025-01-31T04:18:25Z",
      "content": "bW9kZSA9ICJzdGFuZGFsb25lIgoKW2NvbW1hbmRlcl0KZWRnZXMgPSBbIjEyNy4wLjAuMTo1MDA1MSJdCgpbZWRnZV0KY29tbWFuZGVyX2FkZHJlc3MgPSAiMTI3LjAuMC4xOjUwMDUxIgoKW2xvYWRdCnJwcyA9IDUwCmR1cmF0aW9uX3NlY29uZHMgPSAxMApjb25jdXJyZW5jeSA9IDIKcGF5bG9hZCA9ICJHRVQgLyBIVFRQLzEuMVxyXG5Ib3N0OiBleGFtcGxlXHJcblxyXG4iCmFycm93X291dHB1dCA9ICJrdWthaV9tZXRyaWNzLmFycm93IgoKW1tsb2FkLnRhcmdldHNdXQphZGRyID0gIjEyNy4wLjAuMSIKcG9ydCA9IDgwODAKd2VpZ2h0ID0gMS4wCgpbW2xvYWQudGFyZ2V0c11dCmFkZHIgPSAiMTI3LjAuMC4xIgpwb3J0ID0gOTA5MAp3ZWlnaHQgPSAxLjAK"
    },
    "Cargo.toml": {
      "size": 351,
      "lastModified": "2025-01-31T03:52:50Z",
      "content": "W3BhY2thZ2VdCm5hbWUgPSAia3VrYWkiCnZlcnNpb24gPSAiMC4xLjAiCmVkaXRpb24gPSAiMjAyMSIKCltkZXBlbmRlbmNpZXNdCmFueWhvdyA9ICIxIgp0b2tpbyA9IHsgdmVyc2lvbiA9ICIxIiwgZmVhdHVyZXMgPSBbImZ1bGwiXSB9CnNlcmRlID0geyB2ZXJzaW9uID0gIjEiLCBmZWF0dXJlcyA9IFsiZGVyaXZlIl0gfQp0b21sID0gIjAuOCIKcmFuZCA9ICIwLjgiCmFycm93ID0gIjQ0LjAuMCIKYXJyb3ctaXBjID0gIjQ0LjAuMCIKYXJyb3ctZmxpZ2h0ID0gIjQ0LjAuMCIKdG9uaWMgPSAiMC45Igpwcm9zdCA9ICIwLjExIgpmdXR1cmVzID0gIjAuMyIKdG9raW8tc3RyZWFtID0gIjAuMSIKYnl0ZXMgPSAiMSIK"
    },
    "LICENSE": {
      "size": 1489,
      "lastModified": "2025-01-29T16:22:22Z",
      "content": "Q29weXJpZ2h0IChjKSAyMDIzIENvcHlsZWZ0RGV2CkFsbCByaWdodHMgcmVzZXJ2ZWQuCgpSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6CgoxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsCiAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0CiAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUKICAgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KMy4gTmVpdGhlciB0aGUgbmFtZSBvZiBDb3B5bGVmdERldiBub3IgdGhlIG5hbWVzIG9mIGl0cyBjb250cmlidXRvcnMKICAgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlCiAgIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLgoKVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyDigJxBUyBJU+KAnQpBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFCklNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFCkFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUKTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUgpDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRgpTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MKSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4KQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkKQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUKUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg=="
    },
    ".gitignore": {
      "size": 8,
      "lastModified": "2025-01-29T04:18:24Z",
      "content": "L3RhcmdldAo="
    },
    "src/standalone.rs": {
      "size": 5486,
      "lastModified": "2025-01-31T04:18:04Z",
      "content": "dXNlIGFueWhvdzo6UmVzdWx0Owp1c2Ugc3RkOjpzeW5jOjp7QXJjLCBNdXRleH07CnVzZSBzdGQ6OnRpbWU6OntJbnN0YW50LCBEdXJhdGlvbiwgU3lzdGVtVGltZSwgVU5JWF9FUE9DSH07CnVzZSByYW5kOjpSbmc7CnVzZSByYW5kOjpybmdzOjpTdGRSbmc7CnVzZSByYW5kOjpTZWVkYWJsZVJuZzsKdXNlIHRva2lvOjp0aW1lOwp1c2UgYXJyb3c6OmFycmF5Ojp7CiAgICBUaW1lc3RhbXBNaWNyb3NlY29uZEJ1aWxkZXIsIFN0cmluZ0J1aWxkZXIsIEJvb2xlYW5CdWlsZGVyLCBVSW50NjRCdWlsZGVyLAp9Owp1c2UgYXJyb3c6OmRhdGF0eXBlczo6e1NjaGVtYSwgRmllbGQsIERhdGFUeXBlLCBUaW1lVW5pdH07CnVzZSBhcnJvdzo6cmVjb3JkX2JhdGNoOjpSZWNvcmRCYXRjaDsKdXNlIGFycm93X2lwYzo6d3JpdGVyOjpGaWxlV3JpdGVyOwp1c2Ugc3RkOjpmczo6T3Blbk9wdGlvbnM7CnVzZSBzdGQ6OmlvOjp7U2VlaywgU2Vla0Zyb219OwoKdXNlIGNyYXRlOjpjb25maWc6OntMb2FkQ29uZmlnLCBUYXJnZXR9OwoKI1tkZXJpdmUoQ2xvbmUpXQpzdHJ1Y3QgQXR0ZW1wdE1ldHJpYyB7CiAgICB0c19taWNyb3M6IGk2NCwKICAgIHRhcmdldDogU3RyaW5nLAogICAgc3VjY2VzczogYm9vbCwKICAgIGxhdGVuY3lfdXM6IHU2NCwKfQoKcHViIGFzeW5jIGZuIHJ1bl9zdGFuZGFsb25lKGxvYWQ6ICZMb2FkQ29uZmlnKSAtPiBSZXN1bHQ8KCk+IHsKICAgIHByaW50bG4hKCJTdGFuZGFsb25lIG1vZGUgLT4gd3JpdGluZyBBcnJvdyB0bzoge30iLCBsb2FkLmFycm93X291dHB1dCk7CiAgICAvLyBVc2UgYHJwc2Agc28gaXQncyBub3QgY29uc2lkZXJlZCBkZWFkCiAgICBwcmludGxuISgiU3RhbmRhbG9uZSBSUFM6IHt9IiwgbG9hZC5ycHMpOwoKICAgIGxldCBtZXRyaWNzID0gQXJjOjpuZXcoTXV0ZXg6Om5ldyhWZWM6Om5ldygpKSk7CiAgICBsZXQgZW5kX3RpbWUgPSBJbnN0YW50Ojpub3coKSArIER1cmF0aW9uOjpmcm9tX3NlY3MobG9hZC5kdXJhdGlvbl9zZWNvbmRzIGFzIHU2NCk7CgogICAgbGV0IG11dCB3b3JrZXJzID0gVmVjOjpuZXcoKTsKICAgIGZvciBfIGluIDAuLmxvYWQuY29uY3VycmVuY3kgewogICAgICAgIGxldCBtcmVmID0gbWV0cmljcy5jbG9uZSgpOwogICAgICAgIGxldCB0bGlzdCA9IGxvYWQudGFyZ2V0cy5jbG9uZSgpOwogICAgICAgIGxldCBwYXkgPSBsb2FkLnBheWxvYWQuY2xvbmUoKTsKICAgICAgICB3b3JrZXJzLnB1c2godG9raW86OnNwYXduKGFzeW5jIG1vdmUgewogICAgICAgICAgICBydW5fd29ya2VyKG1yZWYsIHRsaXN0LCBwYXksIGVuZF90aW1lKS5hd2FpdDsKICAgICAgICB9KSk7CiAgICB9CgogICAgbGV0IGZsdXNoX3JlZiA9IG1ldHJpY3MuY2xvbmUoKTsKICAgIGxldCBhcnJvd19wYXRoID0gbG9hZC5hcnJvd19vdXRwdXQuY2xvbmUoKTsKICAgIGxldCBmbHVzaGVyID0gdG9raW86OnNwYXduKGFzeW5jIG1vdmUgewogICAgICAgIGxvb3AgewogICAgICAgICAgICB0aW1lOjpzbGVlcChEdXJhdGlvbjo6ZnJvbV9zZWNzKDIpKS5hd2FpdDsKICAgICAgICAgICAgbGV0IG11dCBsb2NhbCA9IHsKICAgICAgICAgICAgICAgIGxldCBtdXQgZyA9IGZsdXNoX3JlZi5sb2NrKCkudW53cmFwKCk7CiAgICAgICAgICAgICAgICBzdGQ6Om1lbTo6dGFrZSgmbXV0ICpnKQogICAgICAgICAgICB9OwogICAgICAgICAgICBpZiAhbG9jYWwuaXNfZW1wdHkoKSB7CiAgICAgICAgICAgICAgICAvLyB3ZSBpZ25vcmUgdGhlIGVycm9yIGZvciB0aGVzZSBwZXJpb2RpYyBmbHVzaGVzCiAgICAgICAgICAgICAgICBsZXQgXyA9IGFwcGVuZF90b19hcnJvdygmYXJyb3dfcGF0aCwgJm11dCBsb2NhbCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9KTsKCiAgICBmb3IgdyBpbiB3b3JrZXJzIHsKICAgICAgICBsZXQgXyA9IHcuYXdhaXQ7CiAgICB9CgogICAgewogICAgICAgIGxldCBtdXQgbGVmdG92ZXIgPSB7CiAgICAgICAgICAgIGxldCBtdXQgZyA9IG1ldHJpY3MubG9jaygpLnVud3JhcCgpOwogICAgICAgICAgICBzdGQ6Om1lbTo6dGFrZSgmbXV0ICpnKQogICAgICAgIH07CiAgICAgICAgaWYgIWxlZnRvdmVyLmlzX2VtcHR5KCkgewogICAgICAgICAgICAvLyBmaW5hbCBmbHVzaCwgcHJvcGFnYXRlIGVycm9yCiAgICAgICAgICAgIGFwcGVuZF90b19hcnJvdygmbG9hZC5hcnJvd19vdXRwdXQsICZtdXQgbGVmdG92ZXIpPzsKICAgICAgICB9CiAgICB9CgogICAgZmx1c2hlci5hYm9ydCgpOwogICAgcHJpbnRsbiEoIlN0YW5kYWxvbmUgbW9kZSBjb21wbGV0ZS4iKTsKICAgIE9rKCgpKQp9Cgphc3luYyBmbiBydW5fd29ya2VyKAogICAgbWV0cmljczogQXJjPE11dGV4PFZlYzxBdHRlbXB0TWV0cmljPj4+LAogICAgdGFyZ2V0czogVmVjPFRhcmdldD4sCiAgICBwYXlsb2FkOiBTdHJpbmcsCiAgICBlbmQ6IEluc3RhbnQsCikgewogICAgbGV0IG11dCBybmcgPSBTdGRSbmc6OmZyb21fZW50cm9weSgpOwogICAgd2hpbGUgSW5zdGFudDo6bm93KCkgPCBlbmQgewogICAgICAgIGxldCB0ID0gcGlja190YXJnZXQoJnRhcmdldHMsICZtdXQgcm5nKTsKICAgICAgICBsZXQgYWRkciA9IGZvcm1hdCEoInt9Ont9IiwgdC5hZGRyLCB0LnBvcnQpOwogICAgICAgIGxldCBzdGFydCA9IEluc3RhbnQ6Om5vdygpOwogICAgICAgIGxldCBzdWNjZXNzID0gbWF0Y2ggdG9raW86Om5ldDo6VGNwU3RyZWFtOjpjb25uZWN0KCZhZGRyKS5hd2FpdCB7CiAgICAgICAgICAgIE9rKG11dCBzKSA9PiB7CiAgICAgICAgICAgICAgICB1c2UgdG9raW86OmlvOjpBc3luY1dyaXRlRXh0OwogICAgICAgICAgICAgICAgcy53cml0ZV9hbGwocGF5bG9hZC5hc19ieXRlcygpKS5hd2FpdC5pc19vaygpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgRXJyKF8pID0+IGZhbHNlLAogICAgICAgIH07CiAgICAgICAgbGV0IGxhdGVuY3lfdXMgPSBzdGFydC5lbGFwc2VkKCkuYXNfbWljcm9zKCkgYXMgdTY0OwogICAgICAgIHsKICAgICAgICAgICAgbGV0IG11dCBnID0gbWV0cmljcy5sb2NrKCkudW53cmFwKCk7CiAgICAgICAgICAgIGcucHVzaChBdHRlbXB0TWV0cmljIHsKICAgICAgICAgICAgICAgIHRzX21pY3Jvczogbm93X21pY3JvcygpLAogICAgICAgICAgICAgICAgdGFyZ2V0OiBhZGRyLAogICAgICAgICAgICAgICAgc3VjY2VzcywKICAgICAgICAgICAgICAgIGxhdGVuY3lfdXMsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICB0aW1lOjpzbGVlcChEdXJhdGlvbjo6ZnJvbV9taWxsaXMoNSkpLmF3YWl0OwogICAgfQp9CgpmbiBwaWNrX3RhcmdldCh0YXJnZXRzOiAmW1RhcmdldF0sIHJuZzogJm11dCBTdGRSbmcpIC0+IFRhcmdldCB7CiAgICBsZXQgc3VtOiBmMzIgPSB0YXJnZXRzLml0ZXIoKS5tYXAofHh8IHgud2VpZ2h0KS5zdW0oKTsKICAgIGlmIHN1bSA8PSAwLjAgewogICAgICAgIHJldHVybiB0YXJnZXRzWzBdLmNsb25lKCk7CiAgICB9CiAgICBsZXQgbXV0IHJvbGwgPSBybmcuZ2VuX3JhbmdlKDAuMC4uc3VtKTsKICAgIGZvciB0IGluIHRhcmdldHMgewogICAgICAgIGlmIHJvbGwgPCB0LndlaWdodCB7CiAgICAgICAgICAgIHJldHVybiB0LmNsb25lKCk7CiAgICAgICAgfQogICAgICAgIHJvbGwgLT0gdC53ZWlnaHQ7CiAgICB9CiAgICB0YXJnZXRzW3RhcmdldHMubGVuKCkgLSAxXS5jbG9uZSgpCn0KCmZuIG5vd19taWNyb3MoKSAtPiBpNjQgewogICAgbGV0IGQgPSBTeXN0ZW1UaW1lOjpub3coKS5kdXJhdGlvbl9zaW5jZShVTklYX0VQT0NIKS51bndyYXBfb3JfZGVmYXVsdCgpOwogICAgZC5hc19taWNyb3MoKSBhcyBpNjQKfQoKZm4gYXBwZW5kX3RvX2Fycm93KHBhdGg6ICZzdHIsIGl0ZW1zOiAmbXV0IFZlYzxBdHRlbXB0TWV0cmljPikgLT4gUmVzdWx0PCgpPiB7CiAgICBpZiBpdGVtcy5pc19lbXB0eSgpIHsKICAgICAgICByZXR1cm4gT2soKCkpOwogICAgfQoKICAgIGxldCBzY2hlbWEgPSBTY2hlbWE6Om5ldyh2ZWMhWwogICAgICAgIEZpZWxkOjpuZXcoInRpbWVzdGFtcF9taWNyb3MiLCBEYXRhVHlwZTo6VGltZXN0YW1wKFRpbWVVbml0OjpNaWNyb3NlY29uZCwgTm9uZSksIGZhbHNlKSwKICAgICAgICBGaWVsZDo6bmV3KCJ0YXJnZXQiLCBEYXRhVHlwZTo6VXRmOCwgZmFsc2UpLAogICAgICAgIEZpZWxkOjpuZXcoInN1Y2Nlc3MiLCBEYXRhVHlwZTo6Qm9vbGVhbiwgZmFsc2UpLAogICAgICAgIEZpZWxkOjpuZXcoImxhdGVuY3lfdXMiLCBEYXRhVHlwZTo6VUludDY0LCBmYWxzZSksCiAgICBdKTsKCiAgICAvLyBJZiB5b3VyIGFwcGVuZF92YWx1ZSByZXR1cm5zICgpLCByZW1vdmUgPyB1c2FnZSBvciBoYW5kbGUgZGlmZmVyZW50bHkKICAgIGxldCBtdXQgdHNiID0gVGltZXN0YW1wTWljcm9zZWNvbmRCdWlsZGVyOjpuZXcoKTsKICAgIGxldCBtdXQgdGd0YiA9IFN0cmluZ0J1aWxkZXI6Om5ldygpOwogICAgbGV0IG11dCBzdWNjYiA9IEJvb2xlYW5CdWlsZGVyOjpuZXcoKTsKICAgIGxldCBtdXQgbGF0YiA9IFVJbnQ2NEJ1aWxkZXI6Om5ldygpOwoKICAgIGZvciBtIGluIGl0ZW1zLml0ZXIoKSB7CiAgICAgICAgLy8gSWYgeW91ciBhcnJvdyB2ZXJzaW9uIHJldHVybnMgKCkgaW5zdGVhZCBvZiBSZXN1bHQsIHJlbW92ZSA/CiAgICAgICAgdHNiLmFwcGVuZF92YWx1ZShtLnRzX21pY3Jvcyk7IAogICAgICAgIHRndGIuYXBwZW5kX3ZhbHVlKCZtLnRhcmdldCk7CiAgICAgICAgc3VjY2IuYXBwZW5kX3ZhbHVlKG0uc3VjY2Vzcyk7CiAgICAgICAgbGF0Yi5hcHBlbmRfdmFsdWUobS5sYXRlbmN5X3VzKTsKICAgIH0KCiAgICBsZXQgdHNfYXJyID0gdHNiLmZpbmlzaCgpOwogICAgbGV0IHNfYXJyID0gdGd0Yi5maW5pc2goKTsKICAgIGxldCBiX2FyciA9IHN1Y2NiLmZpbmlzaCgpOwogICAgbGV0IHVfYXJyID0gbGF0Yi5maW5pc2goKTsKCiAgICBsZXQgYmF0Y2ggPSBSZWNvcmRCYXRjaDo6dHJ5X25ldygKICAgICAgICBzdGQ6OnN5bmM6OkFyYzo6bmV3KHNjaGVtYS5jbG9uZSgpKSwKICAgICAgICB2ZWMhWwogICAgICAgICAgICBzdGQ6OnN5bmM6OkFyYzo6bmV3KHRzX2FyciksCiAgICAgICAgICAgIHN0ZDo6c3luYzo6QXJjOjpuZXcoc19hcnIpLAogICAgICAgICAgICBzdGQ6OnN5bmM6OkFyYzo6bmV3KGJfYXJyKSwKICAgICAgICAgICAgc3RkOjpzeW5jOjpBcmM6Om5ldyh1X2FyciksCiAgICAgICAgXSwKICAgICk/OwoKICAgIGl0ZW1zLmNsZWFyKCk7CgogICAgbGV0IG11dCBmaWxlID0gT3Blbk9wdGlvbnM6Om5ldygpCiAgICAgICAgLmNyZWF0ZSh0cnVlKQogICAgICAgIC5yZWFkKHRydWUpCiAgICAgICAgLmFwcGVuZCh0cnVlKQogICAgICAgIC53cml0ZSh0cnVlKQogICAgICAgIC5vcGVuKHBhdGgpPzsKICAgIGZpbGUuc2VlayhTZWVrRnJvbTo6RW5kKDApKT87CgogICAgbGV0IG11dCB3cml0ZXIgPSBGaWxlV3JpdGVyOjp0cnlfbmV3KGZpbGUsICZzY2hlbWEpPzsKICAgIHdyaXRlci53cml0ZSgmYmF0Y2gpPzsKICAgIHdyaXRlci5maW5pc2goKT87CiAgICBPaygoKSkKfQo="
    },
    "src/main.rs": {
      "size": 1282,
      "lastModified": "2025-01-31T04:17:16Z",
      "content": "bW9kIGNvbmZpZzsKbW9kIGNvbW1hbmRlcjsKbW9kIGVkZ2U7Cm1vZCBzdGFuZGFsb25lOwoKdXNlIGFueWhvdzo6UmVzdWx0Owp1c2UgY29uZmlnOjpsb2FkX2NvbmZpZzsKdXNlIHN0ZDo6ZW52Owp1c2UgdG9raW86OnJ1bnRpbWU6OlJ1bnRpbWU7CgpmbiBtYWluKCkgLT4gUmVzdWx0PCgpPiB7CiAgICBsZXQgcnQgPSBSdW50aW1lOjpuZXcoKT87CiAgICBydC5ibG9ja19vbihhc3luYyB7CiAgICAgICAgbGV0IGFyZ3M6IFZlYzxTdHJpbmc+ID0gZW52OjphcmdzKCkuY29sbGVjdCgpOwogICAgICAgIGlmIGFyZ3MubGVuKCkgPCAzIHx8IGFyZ3NbMV0gIT0gIi0tY29uZmlnIiB7CiAgICAgICAgICAgIGVwcmludGxuISgiVXNhZ2U6IHt9IC0tY29uZmlnIDxQQVRIPiIsIGFyZ3NbMF0pOwogICAgICAgICAgICBzdGQ6OnByb2Nlc3M6OmV4aXQoMSk7CiAgICAgICAgfQoKICAgICAgICBsZXQgY2ZnID0gbG9hZF9jb25maWcoJmFyZ3NbMl0pPzsKICAgICAgICBtYXRjaCBjZmcubW9kZS5hc19zdHIoKSB7CiAgICAgICAgICAgICJjb21tYW5kZXIiID0+IHsKICAgICAgICAgICAgICAgIGlmIGxldCBTb21lKGMpID0gJmNmZy5jb21tYW5kZXIgewogICAgICAgICAgICAgICAgICAgIGNvbW1hbmRlcjo6cnVuX2NvbW1hbmRlcigmY2ZnLmxvYWQsIGMpLmF3YWl0PzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZXByaW50bG4hKCJDb21tYW5kZXIgbW9kZSByZXF1aXJlcyBbY29tbWFuZGVyXSBpbiBjb25maWcuIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgImVkZ2UiID0+IHsKICAgICAgICAgICAgICAgIGlmIGxldCBTb21lKGUpID0gJmNmZy5lZGdlIHsKICAgICAgICAgICAgICAgICAgICBlZGdlOjpydW5fZWRnZSgmY2ZnLmxvYWQsIGUpLmF3YWl0PzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZXByaW50bG4hKCJFZGdlIG1vZGUgcmVxdWlyZXMgW2VkZ2VdIGluIGNvbmZpZy4iKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAic3RhbmRhbG9uZSIgPT4gewogICAgICAgICAgICAgICAgc3RhbmRhbG9uZTo6cnVuX3N0YW5kYWxvbmUoJmNmZy5sb2FkKS5hd2FpdD87CiAgICAgICAgICAgIH0KICAgICAgICAgICAgXyA9PiB7CiAgICAgICAgICAgICAgICBlcHJpbnRsbiEoIlVua25vd24gbW9kZToge30iLCBjZmcubW9kZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgT2soKCkpCiAgICB9KQp9Cg=="
    },
    "src/edge.rs": {
      "size": 4465,
      "lastModified": "2025-01-31T04:17:53Z",
      "content": "dXNlIHN0ZDo6dGltZTo6e0R1cmF0aW9uLCBJbnN0YW50LCBTeXN0ZW1UaW1lLCBVTklYX0VQT0NIfTsKdXNlIHN0ZDo6c3luYzo6e0FyYywgTXV0ZXh9Owp1c2UgYW55aG93OjpSZXN1bHQ7CnVzZSB0b2tpbzo6dGltZTsKdXNlIHJhbmQ6OlJuZzsKdXNlIHJhbmQ6OnJuZ3M6OlN0ZFJuZzsKdXNlIHJhbmQ6OlNlZWRhYmxlUm5nOwp1c2UgdG9uaWM6OlJlcXVlc3Q7CnVzZSBhcnJvd19mbGlnaHQ6OmZsaWdodF9zZXJ2aWNlX2NsaWVudDo6RmxpZ2h0U2VydmljZUNsaWVudDsKdXNlIGFycm93X2ZsaWdodDo6RmxpZ2h0RGF0YTsKdXNlIGNyYXRlOjpjb25maWc6OntMb2FkQ29uZmlnLCBFZGdlQ29uZmlnLCBUYXJnZXR9OwoKI1tkZXJpdmUoQ2xvbmUpXQpzdHJ1Y3QgQXR0ZW1wdE1ldHJpYyB7CiAgICB0c19taWNyb3M6IGk2NCwKICAgIHRhcmdldDogU3RyaW5nLAogICAgc3VjY2VzczogYm9vbCwKICAgIGxhdGVuY3lfdXM6IHU2NCwKfQoKcHViIGFzeW5jIGZuIHJ1bl9lZGdlKGxvYWQ6ICZMb2FkQ29uZmlnLCBlZGdlOiAmRWRnZUNvbmZpZykgLT4gUmVzdWx0PCgpPiB7CiAgICBwcmludGxuISgiRWRnZSBtb2RlIC0+IENvbW1hbmRlciBhdDoge30iLCBlZGdlLmNvbW1hbmRlcl9hZGRyZXNzKTsKICAgIC8vIFVzZSBycHMgc28gbm8gZGVhZF9jb2RlIHdhcm5pbmcKICAgIHByaW50bG4hKCJVc2luZyBSUFM6IHt9IiwgbG9hZC5ycHMpOwoKICAgIGxldCBtZXRyaWNzID0gQXJjOjpuZXcoTXV0ZXg6Om5ldyhWZWM6Om5ldygpKSk7CiAgICBsZXQgZW5kX3RpbWUgPSBJbnN0YW50Ojpub3coKSArIER1cmF0aW9uOjpmcm9tX3NlY3MobG9hZC5kdXJhdGlvbl9zZWNvbmRzIGFzIHU2NCk7CgogICAgbGV0IG11dCB0YXNrcyA9IHZlYyFbXTsKICAgIGZvciBfIGluIDAuLmxvYWQuY29uY3VycmVuY3kgewogICAgICAgIGxldCBtcmVmID0gbWV0cmljcy5jbG9uZSgpOwogICAgICAgIGxldCB0bGlzdCA9IGxvYWQudGFyZ2V0cy5jbG9uZSgpOwogICAgICAgIGxldCBwYXkgPSBsb2FkLnBheWxvYWQuY2xvbmUoKTsKICAgICAgICB0YXNrcy5wdXNoKHRva2lvOjpzcGF3bihhc3luYyBtb3ZlIHsKICAgICAgICAgICAgd29ya2VyX3Rhc2sobXJlZiwgdGxpc3QsIHBheSwgZW5kX3RpbWUpLmF3YWl0OwogICAgICAgIH0pKTsKICAgIH0KCiAgICBsZXQgZmx1c2hfbWV0cmljcyA9IG1ldHJpY3MuY2xvbmUoKTsKICAgIGxldCBjb21tYW5kZXJfYWRkciA9IGVkZ2UuY29tbWFuZGVyX2FkZHJlc3MuY2xvbmUoKTsKICAgIGxldCBmbHVzaGVyID0gdG9raW86OnNwYXduKGFzeW5jIG1vdmUgewogICAgICAgIGxvb3AgewogICAgICAgICAgICB0aW1lOjpzbGVlcChEdXJhdGlvbjo6ZnJvbV9zZWNzKDIpKS5hd2FpdDsKICAgICAgICAgICAgbGV0IG11dCBsb2NhbCA9IHsKICAgICAgICAgICAgICAgIGxldCBtdXQgZyA9IGZsdXNoX21ldHJpY3MubG9jaygpLnVud3JhcCgpOwogICAgICAgICAgICAgICAgc3RkOjptZW06OnRha2UoJm11dCAqZykKICAgICAgICAgICAgfTsKICAgICAgICAgICAgaWYgIWxvY2FsLmlzX2VtcHR5KCkgewogICAgICAgICAgICAgICAgbGV0IF8gPSBwdXNoX21ldHJpY3MoJmNvbW1hbmRlcl9hZGRyLCAmbXV0IGxvY2FsKS5hd2FpdDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0pOwoKICAgIGZvciB0IGluIHRhc2tzIHsKICAgICAgICBsZXQgXyA9IHQuYXdhaXQ7CiAgICB9CgogICAgewogICAgICAgIGxldCBtdXQgbGVmdG92ZXIgPSB7CiAgICAgICAgICAgIGxldCBtdXQgZyA9IG1ldHJpY3MubG9jaygpLnVud3JhcCgpOwogICAgICAgICAgICBzdGQ6Om1lbTo6dGFrZSgmbXV0ICpnKQogICAgICAgIH07CiAgICAgICAgaWYgIWxlZnRvdmVyLmlzX2VtcHR5KCkgewogICAgICAgICAgICBwdXNoX21ldHJpY3MoJmVkZ2UuY29tbWFuZGVyX2FkZHJlc3MsICZtdXQgbGVmdG92ZXIpLmF3YWl0PzsKICAgICAgICB9CiAgICB9CgogICAgZmx1c2hlci5hYm9ydCgpOwogICAgcHJpbnRsbiEoIkVkZ2UgbW9kZSBjb21wbGV0ZS4iKTsKICAgIE9rKCgpKQp9Cgphc3luYyBmbiB3b3JrZXJfdGFzaygKICAgIG1ldHJpY3M6IEFyYzxNdXRleDxWZWM8QXR0ZW1wdE1ldHJpYz4+PiwKICAgIHRhcmdldHM6IFZlYzxUYXJnZXQ+LAogICAgcGF5bG9hZDogU3RyaW5nLAogICAgZW5kX3RpbWU6IEluc3RhbnQsCikgewogICAgbGV0IG11dCBybmcgPSBTdGRSbmc6OmZyb21fZW50cm9weSgpOwogICAgd2hpbGUgSW5zdGFudDo6bm93KCkgPCBlbmRfdGltZSB7CiAgICAgICAgbGV0IHQgPSBwaWNrX3RhcmdldCgmdGFyZ2V0cywgJm11dCBybmcpOwogICAgICAgIGxldCBhZGRyID0gZm9ybWF0ISgie306e30iLCB0LmFkZHIsIHQucG9ydCk7CiAgICAgICAgbGV0IHN0ID0gSW5zdGFudDo6bm93KCk7CiAgICAgICAgbGV0IHN1Y2Nlc3MgPSBtYXRjaCB0b2tpbzo6bmV0OjpUY3BTdHJlYW06OmNvbm5lY3QoJmFkZHIpLmF3YWl0IHsKICAgICAgICAgICAgT2sobXV0IHMpID0+IHsKICAgICAgICAgICAgICAgIHVzZSB0b2tpbzo6aW86OkFzeW5jV3JpdGVFeHQ7CiAgICAgICAgICAgICAgICBzLndyaXRlX2FsbChwYXlsb2FkLmFzX2J5dGVzKCkpLmF3YWl0LmlzX29rKCkKICAgICAgICAgICAgfQogICAgICAgICAgICBFcnIoXykgPT4gZmFsc2UsCiAgICAgICAgfTsKICAgICAgICBsZXQgbGF0ZW5jeV91cyA9IHN0LmVsYXBzZWQoKS5hc19taWNyb3MoKSBhcyB1NjQ7CiAgICAgICAgewogICAgICAgICAgICBsZXQgbXV0IGcgPSBtZXRyaWNzLmxvY2soKS51bndyYXAoKTsKICAgICAgICAgICAgZy5wdXNoKEF0dGVtcHRNZXRyaWMgewogICAgICAgICAgICAgICAgdHNfbWljcm9zOiBub3dfbWljcm9zKCksCiAgICAgICAgICAgICAgICB0YXJnZXQ6IGFkZHIsCiAgICAgICAgICAgICAgICBzdWNjZXNzLAogICAgICAgICAgICAgICAgbGF0ZW5jeV91cywKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIHRpbWU6OnNsZWVwKER1cmF0aW9uOjpmcm9tX21pbGxpcyg1KSkuYXdhaXQ7CiAgICB9Cn0KCmZuIHBpY2tfdGFyZ2V0KHRhcmdldHM6ICZbVGFyZ2V0XSwgcm5nOiAmbXV0IFN0ZFJuZykgLT4gVGFyZ2V0IHsKICAgIGxldCBzdW06IGYzMiA9IHRhcmdldHMuaXRlcigpLm1hcCh8eHwgeC53ZWlnaHQpLnN1bSgpOwogICAgaWYgc3VtIDw9IDAuMCB7CiAgICAgICAgcmV0dXJuIHRhcmdldHNbMF0uY2xvbmUoKTsKICAgIH0KICAgIGxldCBtdXQgcm9sbCA9IHJuZy5nZW5fcmFuZ2UoMC4wLi5zdW0pOwogICAgZm9yIHQgaW4gdGFyZ2V0cyB7CiAgICAgICAgaWYgcm9sbCA8IHQud2VpZ2h0IHsKICAgICAgICAgICAgcmV0dXJuIHQuY2xvbmUoKTsKICAgICAgICB9CiAgICAgICAgcm9sbCAtPSB0LndlaWdodDsKICAgIH0KICAgIHRhcmdldHNbdGFyZ2V0cy5sZW4oKSAtIDFdLmNsb25lKCkKfQoKZm4gbm93X21pY3JvcygpIC0+IGk2NCB7CiAgICBsZXQgZHVyID0gU3lzdGVtVGltZTo6bm93KCkuZHVyYXRpb25fc2luY2UoVU5JWF9FUE9DSCkudW53cmFwX29yX2RlZmF1bHQoKTsKICAgIGR1ci5hc19taWNyb3MoKSBhcyBpNjQKfQoKYXN5bmMgZm4gcHVzaF9tZXRyaWNzKGFkZHI6ICZzdHIsIGl0ZW1zOiAmbXV0IFZlYzxBdHRlbXB0TWV0cmljPikgLT4gUmVzdWx0PCgpPiB7CiAgICBpZiBpdGVtcy5pc19lbXB0eSgpIHsKICAgICAgICByZXR1cm4gT2soKCkpOwogICAgfQogICAgbGV0IG11dCByYXcgPSBWZWM6Om5ldygpOwogICAgZm9yIG0gaW4gaXRlbXMuaXRlcigpIHsKICAgICAgICBsZXQgbGluZSA9IGZvcm1hdCEoInt9LHt9LHt9LHt9XG4iLCBtLnRzX21pY3JvcywgbS50YXJnZXQsIG0uc3VjY2VzcywgbS5sYXRlbmN5X3VzKTsKICAgICAgICByYXcuZXh0ZW5kX2Zyb21fc2xpY2UobGluZS5hc19ieXRlcygpKTsKICAgIH0KICAgIGl0ZW1zLmNsZWFyKCk7CgogICAgbGV0IGNodW5rID0gRmxpZ2h0RGF0YSB7CiAgICAgICAgZGF0YV9oZWFkZXI6IFZlYzo6bmV3KCkuaW50bygpLAogICAgICAgIGRhdGFfYm9keTogcmF3LmludG8oKSwKICAgICAgICBhcHBfbWV0YWRhdGE6IFZlYzo6bmV3KCkuaW50bygpLAogICAgICAgIGZsaWdodF9kZXNjcmlwdG9yOiBOb25lLAogICAgfTsKCiAgICBsZXQgZGF0YV9zdHJlYW0gPSBmdXR1cmVzOjpzdHJlYW06Oml0ZXIodmVjIVtjaHVua10pOwogICAgbGV0IG11dCBjbGllbnQgPSBGbGlnaHRTZXJ2aWNlQ2xpZW50Ojpjb25uZWN0KGZvcm1hdCEoImh0dHA6Ly97fSIsIGFkZHIpKS5hd2FpdD87CiAgICBsZXQgcmVzcG9uc2UgPSBjbGllbnQuZG9fcHV0KFJlcXVlc3Q6Om5ldyhkYXRhX3N0cmVhbSkpLmF3YWl0PzsKICAgIGxldCBtdXQgcmVzdWx0X3N0cmVhbSA9IHJlc3BvbnNlLmludG9faW5uZXIoKTsKCiAgICB3aGlsZSBsZXQgU29tZShfbXNnKSA9IHJlc3VsdF9zdHJlYW0ubWVzc2FnZSgpLmF3YWl0PyB7CiAgICAgICAgLy8gaGFuZGxlIFB1dFJlc3VsdCBpZiBuZWVkZWQKICAgIH0KICAgIE9rKCgpKQp9Cg=="
    },
    "src/config.rs": {
      "size": 1050,
      "lastModified": "2025-01-31T04:17:02Z",
      "content": "dXNlIHNlcmRlOjpEZXNlcmlhbGl6ZTsKdXNlIHN0ZDo6ZnM7CgojW2Rlcml2ZShEZWJ1ZywgRGVzZXJpYWxpemUsIENsb25lKV0KcHViIHN0cnVjdCBUYXJnZXQgewogICAgcHViIGFkZHI6IFN0cmluZywKICAgIHB1YiBwb3J0OiB1MTYsCiAgICBwdWIgd2VpZ2h0OiBmMzIsCn0KCiNbZGVyaXZlKERlYnVnLCBEZXNlcmlhbGl6ZSwgQ2xvbmUpXQpwdWIgc3RydWN0IExvYWRDb25maWcgewogICAgLy8gV2UncmUgYWN0dWFsbHkgdXNpbmcgYHJwc2AsIHNvIG5vIG5lZWQgZm9yICNbYWxsb3coZGVhZF9jb2RlKV0KICAgIHB1YiBycHM6IHVzaXplLAogICAgcHViIGR1cmF0aW9uX3NlY29uZHM6IHVzaXplLAogICAgcHViIGNvbmN1cnJlbmN5OiB1c2l6ZSwKICAgIHB1YiBwYXlsb2FkOiBTdHJpbmcsCiAgICBwdWIgdGFyZ2V0czogVmVjPFRhcmdldD4sCiAgICBwdWIgYXJyb3dfb3V0cHV0OiBTdHJpbmcsCn0KCiNbZGVyaXZlKERlYnVnLCBEZXNlcmlhbGl6ZSwgQ2xvbmUpXQpwdWIgc3RydWN0IENvbW1hbmRlckNvbmZpZyB7CiAgICBwdWIgZWRnZXM6IFZlYzxTdHJpbmc+LAp9CgojW2Rlcml2ZShEZWJ1ZywgRGVzZXJpYWxpemUsIENsb25lKV0KcHViIHN0cnVjdCBFZGdlQ29uZmlnIHsKICAgIHB1YiBjb21tYW5kZXJfYWRkcmVzczogU3RyaW5nLAp9CgojW2Rlcml2ZShEZWJ1ZywgRGVzZXJpYWxpemUsIENsb25lKV0KcHViIHN0cnVjdCBBcHBDb25maWcgewogICAgcHViIG1vZGU6IFN0cmluZywgLy8gImNvbW1hbmRlciIsICJlZGdlIiwgb3IgInN0YW5kYWxvbmUiCiAgICBwdWIgY29tbWFuZGVyOiBPcHRpb248Q29tbWFuZGVyQ29uZmlnPiwKICAgIHB1YiBlZGdlOiBPcHRpb248RWRnZUNvbmZpZz4sCiAgICBwdWIgbG9hZDogTG9hZENvbmZpZywKfQoKcHViIGZuIGxvYWRfY29uZmlnKHBhdGg6ICZzdHIpIC0+IGFueWhvdzo6UmVzdWx0PEFwcENvbmZpZz4gewogICAgbGV0IHR4dCA9IGZzOjpyZWFkX3RvX3N0cmluZyhwYXRoKT87CiAgICBsZXQgY2ZnOiBBcHBDb25maWcgPSB0b21sOjpmcm9tX3N0cigmdHh0KT87CiAgICBPayhjZmcpCn0K"
    },
    "src/commander.rs": {
      "size": 5551,
      "lastModified": "2025-01-31T04:53:02Z",
      "content": "dXNlIHN0ZDo6cGluOjpQaW47CnVzZSBzdGQ6OnN5bmM6OntBcmMsIE11dGV4fTsKdXNlIGFueWhvdzo6UmVzdWx0Owp1c2UgZnV0dXJlczo6e1N0cmVhbSwgU3RyZWFtRXh0fTsKdXNlIHRva2lvOjpzeW5jOjptcHNjOwp1c2UgdG9raW9fc3RyZWFtOjp3cmFwcGVyczo6UmVjZWl2ZXJTdHJlYW07CnVzZSB0b25pYzo6e1JlcXVlc3QsIFJlc3BvbnNlLCBTdGF0dXMsIHRyYW5zcG9ydDo6U2VydmVyfTsKdXNlIGFycm93X2ZsaWdodDo6ewogICAgZmxpZ2h0X3NlcnZpY2Vfc2VydmVyOjp7RmxpZ2h0U2VydmljZSwgRmxpZ2h0U2VydmljZVNlcnZlcn0sCiAgICBBY3Rpb24sIEFjdGlvblR5cGUsIENyaXRlcmlhLCBGbGlnaHREYXRhLCBGbGlnaHREZXNjcmlwdG9yLCBGbGlnaHRJbmZvLAogICAgSGFuZHNoYWtlUmVxdWVzdCwgSGFuZHNoYWtlUmVzcG9uc2UsIFB1dFJlc3VsdCwgU2NoZW1hUmVzdWx0LCBUaWNrZXQsCn07Cgp1c2UgY3JhdGU6OmNvbmZpZzo6e0xvYWRDb25maWcsIENvbW1hbmRlckNvbmZpZ307CgpwdWIgc3RydWN0IEthdWthaUZsaWdodFNlcnZlciB7CiAgICBwdWIgZGF0YV9zdG9yZTogQXJjPE11dGV4PFZlYzxGbGlnaHREYXRhPj4+LAp9CgppbXBsIEthdWthaUZsaWdodFNlcnZlciB7CiAgICBwdWIgZm4gbmV3KCkgLT4gU2VsZiB7CiAgICAgICAgU2VsZiB7CiAgICAgICAgICAgIGRhdGFfc3RvcmU6IEFyYzo6bmV3KE11dGV4OjpuZXcoVmVjOjpuZXcoKSkpLAogICAgICAgIH0KICAgIH0KfQoKLy8gVHlwZXMgcmVxdWlyZWQgYnkgdGhlIEZsaWdodFNlcnZpY2UgdHJhaXQKdHlwZSBQdXRSZXN1bHRTdHJlYW0gPSBQaW48Qm94PGR5biBTdHJlYW08SXRlbSA9IFJlc3VsdDxQdXRSZXN1bHQsIFN0YXR1cz4+ICsgU2VuZCArICdzdGF0aWM+PjsKdHlwZSBFbXB0eVN0cmVhbTxUPiA9IFBpbjxCb3g8ZHluIFN0cmVhbTxJdGVtID0gUmVzdWx0PFQsIFN0YXR1cz4+ICsgU2VuZCArICdzdGF0aWM+PjsKCiNbdG9uaWM6OmFzeW5jX3RyYWl0XQppbXBsIEZsaWdodFNlcnZpY2UgZm9yIEthdWthaUZsaWdodFNlcnZlciB7CiAgICB0eXBlIEhhbmRzaGFrZVN0cmVhbSA9IEVtcHR5U3RyZWFtPEhhbmRzaGFrZVJlc3BvbnNlPjsKICAgIHR5cGUgTGlzdEZsaWdodHNTdHJlYW0gPSBFbXB0eVN0cmVhbTxGbGlnaHRJbmZvPjsKICAgIHR5cGUgRG9HZXRTdHJlYW0gPSBFbXB0eVN0cmVhbTxGbGlnaHREYXRhPjsKICAgIHR5cGUgRG9QdXRTdHJlYW0gPSBQdXRSZXN1bHRTdHJlYW07CiAgICB0eXBlIERvRXhjaGFuZ2VTdHJlYW0gPSBFbXB0eVN0cmVhbTxGbGlnaHREYXRhPjsKICAgIHR5cGUgRG9BY3Rpb25TdHJlYW0gPSBFbXB0eVN0cmVhbTxhcnJvd19mbGlnaHQ6OlJlc3VsdD47CiAgICB0eXBlIExpc3RBY3Rpb25zU3RyZWFtID0gRW1wdHlTdHJlYW08QWN0aW9uVHlwZT47CgogICAgYXN5bmMgZm4gaGFuZHNoYWtlKAogICAgICAgICZzZWxmLAogICAgICAgIHJlcTogUmVxdWVzdDx0b25pYzo6U3RyZWFtaW5nPEhhbmRzaGFrZVJlcXVlc3Q+PiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPFNlbGY6OkhhbmRzaGFrZVN0cmVhbT4sIFN0YXR1cz4gewogICAgICAgIGxldCAodHgsIHJ4KSA9IG1wc2M6OmNoYW5uZWwoMSk7CiAgICAgICAgbGV0IG11dCBzdHJlYW0gPSByZXEuaW50b19pbm5lcigpOwoKICAgICAgICB0b2tpbzo6c3Bhd24oYXN5bmMgbW92ZSB7CiAgICAgICAgICAgIHdoaWxlIGxldCBTb21lKE9rKF9oYW5kc2hha2VfbXNnKSkgPSBzdHJlYW0ubmV4dCgpLmF3YWl0IHsKICAgICAgICAgICAgICAgIC8vIGhhbmRsZSBvciB2YWxpZGF0ZSBjcmVkZW50aWFscyBoZXJlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgbGV0IF8gPSB0eC5zZW5kKE9rKEhhbmRzaGFrZVJlc3BvbnNlIHsKICAgICAgICAgICAgICAgIHByb3RvY29sX3ZlcnNpb246IDAsCiAgICAgICAgICAgICAgICBwYXlsb2FkOiBEZWZhdWx0OjpkZWZhdWx0KCksCiAgICAgICAgICAgIH0pKQogICAgICAgICAgICAuYXdhaXQ7CiAgICAgICAgfSk7CgogICAgICAgIE9rKFJlc3BvbnNlOjpuZXcoQm94OjpwaW4oUmVjZWl2ZXJTdHJlYW06Om5ldyhyeCkpKSkKICAgIH0KCiAgICBhc3luYyBmbiBsaXN0X2ZsaWdodHMoCiAgICAgICAgJnNlbGYsCiAgICAgICAgXzogUmVxdWVzdDxDcml0ZXJpYT4sCiAgICApIC0+IFJlc3VsdDxSZXNwb25zZTxTZWxmOjpMaXN0RmxpZ2h0c1N0cmVhbT4sIFN0YXR1cz4gewogICAgICAgIGxldCAodHgsIHJ4KSA9IG1wc2M6OmNoYW5uZWwoMSk7CiAgICAgICAgbGV0IF8gPSB0eC5zZW5kKEVycihTdGF0dXM6OnVuaW1wbGVtZW50ZWQoImxpc3RfZmxpZ2h0cyB1bmltcGxlbWVudGVkIikpKS5hd2FpdDsKICAgICAgICBPayhSZXNwb25zZTo6bmV3KEJveDo6cGluKFJlY2VpdmVyU3RyZWFtOjpuZXcocngpKSkpCiAgICB9CgogICAgYXN5bmMgZm4gZG9fZ2V0KAogICAgICAgICZzZWxmLAogICAgICAgIF86IFJlcXVlc3Q8VGlja2V0PiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPFNlbGY6OkRvR2V0U3RyZWFtPiwgU3RhdHVzPiB7CiAgICAgICAgbGV0ICh0eCwgcngpID0gbXBzYzo6Y2hhbm5lbCgxKTsKICAgICAgICBsZXQgXyA9IHR4LnNlbmQoRXJyKFN0YXR1czo6dW5pbXBsZW1lbnRlZCgiZG9fZ2V0IHVuaW1wbGVtZW50ZWQiKSkpLmF3YWl0OwogICAgICAgIE9rKFJlc3BvbnNlOjpuZXcoQm94OjpwaW4oUmVjZWl2ZXJTdHJlYW06Om5ldyhyeCkpKSkKICAgIH0KCiAgICAvLyA8LS0gVVBEQVRFRCB0byBhdm9pZCBob2xkaW5nIE11dGV4R3VhcmQgYWNyb3NzIGFuIGF3YWl0LgogICAgYXN5bmMgZm4gZG9fcHV0KAogICAgICAgICZzZWxmLAogICAgICAgIHJlcXVlc3Q6IFJlcXVlc3Q8dG9uaWM6OlN0cmVhbWluZzxGbGlnaHREYXRhPj4sCiAgICApIC0+IFJlc3VsdDxSZXNwb25zZTxTZWxmOjpEb1B1dFN0cmVhbT4sIFN0YXR1cz4gewogICAgICAgIGxldCAodHgsIHJ4KSA9IG1wc2M6OmNoYW5uZWwoMik7CiAgICAgICAgbGV0IHN0b3JlX3JlZiA9IHNlbGYuZGF0YV9zdG9yZS5jbG9uZSgpOwogICAgICAgIGxldCBtdXQgaW5ib3VuZCA9IHJlcXVlc3QuaW50b19pbm5lcigpOwoKICAgICAgICB0b2tpbzo6c3Bhd24oYXN5bmMgbW92ZSB7CiAgICAgICAgICAgIHdoaWxlIGxldCBTb21lKE9rKGRhdGEpKSA9IGluYm91bmQubmV4dCgpLmF3YWl0IHsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAvLyBBY3F1aXJlIGFuZCBkcm9wIHRoZSBndWFyZCBpbiBpdHMgb3duIHNjb3BlCiAgICAgICAgICAgICAgICAgICAgbGV0IG11dCBzdG9yZSA9IHN0b3JlX3JlZi5sb2NrKCkudW53cmFwKCk7CiAgICAgICAgICAgICAgICAgICAgc3RvcmUucHVzaChkYXRhKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIE5vdyB0aGF0IHRoZSBndWFyZCBpcyBkcm9wcGVkLCB3ZSBjYW4gc2FmZWx5IGF3YWl0CiAgICAgICAgICAgICAgICBsZXQgXyA9IHR4LnNlbmQoT2soUHV0UmVzdWx0IHsKICAgICAgICAgICAgICAgICAgICBhcHBfbWV0YWRhdGE6IHZlYyFbXS5pbnRvKCksCiAgICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgICAgIC5hd2FpdDsKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBPayhSZXNwb25zZTo6bmV3KEJveDo6cGluKFJlY2VpdmVyU3RyZWFtOjpuZXcocngpKSkpCiAgICB9CgogICAgYXN5bmMgZm4gZG9fZXhjaGFuZ2UoCiAgICAgICAgJnNlbGYsCiAgICAgICAgXzogUmVxdWVzdDx0b25pYzo6U3RyZWFtaW5nPEZsaWdodERhdGE+PiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPFNlbGY6OkRvRXhjaGFuZ2VTdHJlYW0+LCBTdGF0dXM+IHsKICAgICAgICBsZXQgKHR4LCByeCkgPSBtcHNjOjpjaGFubmVsKDEpOwogICAgICAgIGxldCBfID0gdHguc2VuZChFcnIoU3RhdHVzOjp1bmltcGxlbWVudGVkKCJkb19leGNoYW5nZSB1bmltcGxlbWVudGVkIikpKS5hd2FpdDsKICAgICAgICBPayhSZXNwb25zZTo6bmV3KEJveDo6cGluKFJlY2VpdmVyU3RyZWFtOjpuZXcocngpKSkpCiAgICB9CgogICAgYXN5bmMgZm4gZG9fYWN0aW9uKAogICAgICAgICZzZWxmLAogICAgICAgIF86IFJlcXVlc3Q8QWN0aW9uPiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPFNlbGY6OkRvQWN0aW9uU3RyZWFtPiwgU3RhdHVzPiB7CiAgICAgICAgbGV0ICh0eCwgcngpID0gbXBzYzo6Y2hhbm5lbCgxKTsKICAgICAgICBsZXQgXyA9IHR4LnNlbmQoRXJyKFN0YXR1czo6dW5pbXBsZW1lbnRlZCgiZG9fYWN0aW9uIHVuaW1wbGVtZW50ZWQiKSkpLmF3YWl0OwogICAgICAgIE9rKFJlc3BvbnNlOjpuZXcoQm94OjpwaW4oUmVjZWl2ZXJTdHJlYW06Om5ldyhyeCkpKSkKICAgIH0KCiAgICBhc3luYyBmbiBsaXN0X2FjdGlvbnMoCiAgICAgICAgJnNlbGYsCiAgICAgICAgXzogUmVxdWVzdDxhcnJvd19mbGlnaHQ6OkVtcHR5PiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPFNlbGY6Okxpc3RBY3Rpb25zU3RyZWFtPiwgU3RhdHVzPiB7CiAgICAgICAgbGV0ICh0eCwgcngpID0gbXBzYzo6Y2hhbm5lbCgxKTsKICAgICAgICBsZXQgXyA9IHR4LnNlbmQoRXJyKFN0YXR1czo6dW5pbXBsZW1lbnRlZCgibGlzdF9hY3Rpb25zIHVuaW1wbGVtZW50ZWQiKSkpLmF3YWl0OwogICAgICAgIE9rKFJlc3BvbnNlOjpuZXcoQm94OjpwaW4oUmVjZWl2ZXJTdHJlYW06Om5ldyhyeCkpKSkKICAgIH0KCiAgICBhc3luYyBmbiBnZXRfZmxpZ2h0X2luZm8oCiAgICAgICAgJnNlbGYsCiAgICAgICAgXzogUmVxdWVzdDxGbGlnaHREZXNjcmlwdG9yPiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPEZsaWdodEluZm8+LCBTdGF0dXM+IHsKICAgICAgICBFcnIoU3RhdHVzOjp1bmltcGxlbWVudGVkKCJnZXRfZmxpZ2h0X2luZm8gdW5pbXBsZW1lbnRlZCIpKQogICAgfQoKICAgIGFzeW5jIGZuIGdldF9zY2hlbWEoCiAgICAgICAgJnNlbGYsCiAgICAgICAgXzogUmVxdWVzdDxGbGlnaHREZXNjcmlwdG9yPiwKICAgICkgLT4gUmVzdWx0PFJlc3BvbnNlPFNjaGVtYVJlc3VsdD4sIFN0YXR1cz4gewogICAgICAgIEVycihTdGF0dXM6OnVuaW1wbGVtZW50ZWQoImdldF9zY2hlbWEgdW5pbXBsZW1lbnRlZCIpKQogICAgfQp9CgpwdWIgYXN5bmMgZm4gcnVuX2NvbW1hbmRlcihsb2FkOiAmTG9hZENvbmZpZywgY21kcjogJkNvbW1hbmRlckNvbmZpZykgLT4gUmVzdWx0PCgpPiB7CiAgICBwcmludGxuISgiQ29tbWFuZGVyIC0+IGVkZ2VzOiB7Oj99IiwgY21kci5lZGdlcyk7CiAgICBwcmludGxuISgiQ29tbWFuZGVyIGlnbm9yaW5nIFJQUzoge30iLCBsb2FkLnJwcyk7CgogICAgbGV0IGFkZHIgPSAiMC4wLjAuMDo1MDA1MSIucGFyc2UoKT87CiAgICBsZXQgc2VydmljZSA9IEthdWthaUZsaWdodFNlcnZlcjo6bmV3KCk7CiAgICBwcmludGxuISgiQ29tbWFuZGVyIGxpc3RlbmluZyBvbiB7fSIsIGFkZHIpOwoKICAgIFNlcnZlcjo6YnVpbGRlcigpCiAgICAgICAgLmFkZF9zZXJ2aWNlKEZsaWdodFNlcnZpY2VTZXJ2ZXI6Om5ldyhzZXJ2aWNlKSkKICAgICAgICAuc2VydmUoYWRkcikKICAgICAgICAuYXdhaXQ/OwoKICAgIE9rKCgpKQp9Cg=="
    }
  }
}